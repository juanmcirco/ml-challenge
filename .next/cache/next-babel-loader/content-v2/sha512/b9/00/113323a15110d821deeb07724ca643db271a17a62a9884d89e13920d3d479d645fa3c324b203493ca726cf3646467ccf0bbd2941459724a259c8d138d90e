{"ast":null,"code":"import _extends from \"C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\circo\\\\OneDrive\\\\Documentos\\\\repos\\\\examen ml\\\\TestML\\\\components\\\\Autocomplete\\\\Autocomplete.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction sleep() {\n  var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function AutocompleteWrapper() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState([]),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var loading = open && options.length === 0;\n  useEffect(function () {\n    var active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, autosuggest;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios('/api/autosuggest');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return sleep(1e3);\n\n            case 5:\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              autosuggest = _context.sent;\n\n              if (active) {\n                setOptions(Object.keys(autosuggest).map(function (key) {\n                  return autosuggest[key].item[0];\n                }));\n                console.log(options);\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      active = false;\n    };\n  }, [loading]);\n  useEffect(function () {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return __jsx(Autocomplete, {\n    id: \"asynchronous-demo\",\n    style: {\n      width: 300\n    },\n    open: open,\n    onOpen: function onOpen() {\n      setOpen(true);\n    },\n    onClose: function onClose() {\n      setOpen(false);\n    },\n    getOptionSelected: function getOptionSelected(option, value) {\n      return option.name === value.name;\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    options: options,\n    loading: loading,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Asynchronous\",\n        variant: \"outlined\",\n        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n          endAdornment: __jsx(React.Fragment, null, loading ? __jsx(CircularProgress, {\n            color: \"inherit\",\n            size: 20,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 28\n            }\n          }) : null, params.InputProps.endAdornment)\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(AutocompleteWrapper, \"NAnsH/wQUpBOztFs1nPXEavBw+I=\");\n\n_c = AutocompleteWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutocompleteWrapper\");","map":{"version":3,"sources":["C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/components/Autocomplete/Autocomplete.js"],"names":["React","useState","useEffect","axios","TextField","Autocomplete","CircularProgress","sleep","delay","Promise","resolve","setTimeout","AutocompleteWrapper","open","setOpen","options","setOptions","loading","length","active","undefined","response","json","autosuggest","Object","keys","map","key","item","console","log","width","option","value","name","params","InputProps","endAdornment"],"mappings":"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","sourcesContent":["// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\nimport React, {useState , useEffect}from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nexport default function AutocompleteWrapper() {\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      const response = await axios('/api/autosuggest');\r\n      await sleep(1e3); // For demo purposes.\r\n      const autosuggest = await response.json();\r\n\r\n      if (active) {\r\n        setOptions(Object.keys(autosuggest).map((key) => autosuggest[key].item[0]));\r\n        console.log(options)\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"asynchronous-demo\"\r\n      style={{ width: 300 }}\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={options}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Asynchronous\"\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}