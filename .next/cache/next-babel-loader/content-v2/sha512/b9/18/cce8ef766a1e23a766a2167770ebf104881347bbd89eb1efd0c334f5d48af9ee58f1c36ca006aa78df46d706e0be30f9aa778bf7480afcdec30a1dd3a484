{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\circo\\\\OneDrive\\\\Documentos\\\\repos\\\\examen ml\\\\TestML\\\\components\\\\Searchbox.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\nimport styled from 'styled-components';\nimport { useCookies } from \"react-cookie\";\nexport default function Searchbox({\n  optionSelected\n}) {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]);\n  const loading = open && options.length === 0;\n  const [cookies, setCookie] = useCookies([\"LastSearch\"]);\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  const handleChange = async e => {\n    if (e.target.value && e.target.value !== \"\") {\n      const {\n        data\n      } = await axios(`/api/autosuggest?q=${e.target.value}`);\n      const autosuggest = await data.suggestions;\n      setOptions(autosuggest.map(key => {\n        return {\n          name: key.q\n        };\n      }));\n    }\n  };\n\n  const goToProduct = e => {\n    optionSelected(e);\n    setCookie(\"LastSearch\", e);\n  };\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return __jsx(React.Fragment, null, JSON.stringify(options), __jsx(InputWrapper, {\n    type: \"text\",\n    placeholder: \"Nunca dejes de buscar\",\n    onChange: handleChange,\n    style: {\n      paddingLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\nconst InputWrapper = styled.input.withConfig({\n  displayName: \"Searchbox__InputWrapper\",\n  componentId: \"sc-1gbjbu6-0\"\n})([\"padding:7px 60px 9px 15px;-webkit-border-radius:2px;border-radius:2px;background-color:#fff;border:0 rgba(0,0,0,.2);display:flex;flex-grow:1;:focus{outline:-webkit-focus-ring-color auto 0px !important;}\"]);\nconst AutocompleteWrapper = styled(Autocomplete).withConfig({\n  displayName: \"Searchbox__AutocompleteWrapper\",\n  componentId: \"sc-1gbjbu6-1\"\n})([\"display:flex;flex-grow:1;div{display:flex;flex-grow:1;}\"]);","map":{"version":3,"sources":["C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/components/Searchbox.js"],"names":["React","useState","useEffect","axios","Autocomplete","styled","useCookies","Searchbox","optionSelected","open","setOpen","options","setOptions","loading","length","cookies","setCookie","active","undefined","handleChange","e","target","value","data","autosuggest","suggestions","map","key","name","q","goToProduct","JSON","stringify","paddingLeft","InputWrapper","input","AutocompleteWrapper"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAuC;AACpD,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMY,OAAO,GAAGJ,IAAI,IAAIE,OAAO,CAACG,MAAR,KAAmB,CAA3C;AACA,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBV,UAAU,CAAC,CAAC,YAAD,CAAD,CAAvC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,MAAM,GAAG,IAAb;;AAEA,QAAI,CAACJ,OAAL,EAAc;AACZ,aAAOK,SAAP;AACD;;AAID,WAAO,MAAM;AACXD,MAAAA,MAAM,GAAG,KAAT;AACD,KAFD;AAGD,GAZQ,EAYN,CAACJ,OAAD,CAZM,CAAT;;AAcA,QAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkBF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAAzC,EAA6C;AAC3C,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMpB,KAAK,CAAE,sBAAqBiB,CAAC,CAACC,MAAF,CAASC,KAAM,EAAtC,CAA5B;AACA,YAAME,WAAW,GAAG,MAAMD,IAAI,CAACE,WAA/B;AACAb,MAAAA,UAAU,CAACY,WAAW,CAACE,GAAZ,CAAiBC,GAAD,IAAS;AAAE,eAAO;AAAEC,UAAAA,IAAI,EAAED,GAAG,CAACE;AAAZ,SAAP;AAAwB,OAAnD,CAAD,CAAV;AACD;AACF,GAND;;AAQA,QAAMC,WAAW,GAAIV,CAAD,IAAO;AACzBZ,IAAAA,cAAc,CAACY,CAAD,CAAd;AACAJ,IAAAA,SAAS,CAAC,YAAD,EAAeI,CAAf,CAAT;AACD,GAHD;;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,IAAL,EAAW;AACTG,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;AAMA,SACE,4BACGsB,IAAI,CAACC,SAAL,CAAerB,OAAf,CADH,EAEE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,uBAAtC;AAA8D,IAAA,QAAQ,EAAEQ,YAAxE;AAAsF,IAAA,KAAK,EAAE;AAAEc,MAAAA,WAAW,EAAE;AAAf,KAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;AAED,MAAMC,YAAY,GAAG7B,MAAM,CAAC8B,KAAV;AAAA;AAAA;AAAA,kNAAlB;AAcA,MAAMC,mBAAmB,GAAG/B,MAAM,CAACD,YAAD,CAAT;AAAA;AAAA;AAAA,+DAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\r\nimport styled from 'styled-components'\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nexport default function Searchbox({ optionSelected }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const loading = open && options.length === 0;\r\n  const [cookies, setCookie] = useCookies([\"LastSearch\"]);\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  const handleChange = async (e) => {\r\n    if (e.target.value && e.target.value !== \"\") {\r\n      const { data } = await axios(`/api/autosuggest?q=${e.target.value}`)\r\n      const autosuggest = await data.suggestions;\r\n      setOptions(autosuggest.map((key) => { return { name: key.q } }));\r\n    }\r\n  }\r\n\r\n  const goToProduct = (e) => {\r\n    optionSelected(e)\r\n    setCookie(\"LastSearch\", e);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      {JSON.stringify(options)}\r\n      <InputWrapper type=\"text\" placeholder=\"Nunca dejes de buscar\" onChange={handleChange} style={{ paddingLeft: 20 }} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst InputWrapper = styled.input`\r\n    padding: 7px 60px 9px 15px;\r\n    -webkit-border-radius: 2px;\r\n    border-radius: 2px;\r\n    background-color: #fff;\r\n    border: 0 rgba(0,0,0,.2);\r\n    //margin: 0 30px;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    :focus {\r\n    outline: -webkit-focus-ring-color auto 0px !important;\r\n}\r\n`\r\n\r\nconst AutocompleteWrapper = styled(Autocomplete)`\r\n    display: flex;\r\n    flex-grow: 1;\r\n    div{\r\n        display: flex;\r\n        flex-grow: 1;\r\n    }\r\n`"]},"metadata":{},"sourceType":"module"}