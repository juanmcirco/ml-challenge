{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\circo\\\\OneDrive\\\\Documentos\\\\repos\\\\examen ml\\\\TestML\\\\components\\\\ResultDescription.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport NumberFormat from 'react-number-format';\nimport styled from 'styled-components';\nimport Grid from '@material-ui/core/Grid';\nimport { condition } from '';\nexport default function ResultDescription(_ref) {\n  var item = _ref.item;\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    xs: 12,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(CardContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, __jsx(Details, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(Cover, {\n    image: item.picture,\n    title: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }), __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, item.condition, \" -  \", item.sold_quantity, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, item.title), __jsx(Price, {\n    value: item.price.amount,\n    displayType: 'text',\n    thousandSeparator: '.',\n    decimalSeparator: ',',\n    thousandsGroupStyle: \"thousand\",\n    prefix: item.price.currency === 'ARS' ? '$ ' : 'U$S ',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }))), __jsx(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, item.description))))));\n}\n_c = ResultDescription;\nvar Container = styled.div.withConfig({\n  displayName: \"ResultDescription__Container\",\n  componentId: \"sc-12hk3d-0\"\n})([\"  max-width:1200px;margin:auto;\"]);\n_c2 = Container;\nvar CardContainer = styled(Card).withConfig({\n  displayName: \"ResultDescription__CardContainer\",\n  componentId: \"sc-12hk3d-1\"\n})([\"display:block;width:886;min-height:886;margin:auto;border-bottom:thin solid #eee;border-radius:0\"]);\n_c3 = CardContainer;\nvar Details = styled.div.withConfig({\n  displayName: \"ResultDescription__Details\",\n  componentId: \"sc-12hk3d-2\"\n})([\"display:flex;\"]);\n_c4 = Details;\nvar Cover = styled(CardMedia).withConfig({\n  displayName: \"ResultDescription__Cover\",\n  componentId: \"sc-12hk3d-3\"\n})([\"width:680px;height:680px;\"]);\n_c5 = Cover;\nvar Content = styled(CardContent).withConfig({\n  displayName: \"ResultDescription__Content\",\n  componentId: \"sc-12hk3d-4\"\n})([\"flex:1 0 auto;\"]);\n_c6 = Content;\nvar Description = styled.div.withConfig({\n  displayName: \"ResultDescription__Description\",\n  componentId: \"sc-12hk3d-5\"\n})([\"display:flex;flex-grow:1\"]);\n_c7 = Description;\nvar Title = styled.div.withConfig({\n  displayName: \"ResultDescription__Title\",\n  componentId: \"sc-12hk3d-6\"\n})([\"display:flex;flex-direction:row;font-size:24px;font-weight:300;\"]);\n_c8 = Title;\nvar Price = styled(NumberFormat).withConfig({\n  displayName: \"ResultDescription__Price\",\n  componentId: \"sc-12hk3d-7\"\n})([\"font-size:46px;\"]);\n_c9 = Price;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"ResultDescription\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"CardContainer\");\n$RefreshReg$(_c4, \"Details\");\n$RefreshReg$(_c5, \"Cover\");\n$RefreshReg$(_c6, \"Content\");\n$RefreshReg$(_c7, \"Description\");\n$RefreshReg$(_c8, \"Title\");\n$RefreshReg$(_c9, \"Price\");","map":{"version":3,"sources":["C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/components/ResultDescription.js"],"names":["React","Card","CardContent","CardMedia","Typography","NumberFormat","styled","Grid","condition","ResultDescription","item","picture","title","sold_quantity","price","amount","currency","description","Container","div","CardContainer","Details","Cover","Content","Description","Title","Price"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NumberFormat from 'react-number-format';\r\nimport styled from 'styled-components';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {condition} from ''\r\n\r\nexport default function ResultDescription({ item }) {\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3} xs={12} justify='center'>\r\n        <Grid item xs={10}>\r\n          <CardContainer>\r\n            <Details >\r\n              <Cover\r\n                image={item.picture}\r\n                title={item.title}\r\n              />\r\n              <Content>\r\n                {item.condition} -  {item.sold_quantity}\r\n                <Title>{item.title}</Title>\r\n                <Price\r\n                  value={item.price.amount}\r\n                  displayType={'text'}\r\n                  thousandSeparator={'.'}\r\n                  decimalSeparator={','}\r\n                  thousandsGroupStyle='thousand'\r\n                  prefix={item.price.currency === 'ARS' ? '$ ' : 'U$S '}\r\n                />\r\n              </Content>\r\n            </Details>\r\n            <Description >\r\n              <Typography>\r\n                {item.description}\r\n              </Typography>\r\n            </Description>\r\n          </CardContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Container >\r\n  );\r\n}\r\n\r\nconst Container = styled.div` \r\n  max-width: 1200px;\r\n  margin: auto;\r\n`\r\n\r\nconst CardContainer = styled(Card)`\r\n  display: block;\r\n  width: 886;\r\n  min-height: 886;\r\n  margin: auto;\r\n  border-bottom: thin solid #eee;\r\n  border-radius: 0\r\n`\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst Cover = styled(CardMedia)`\r\n  width: 680px;\r\n  height: 680px;\r\n`\r\n\r\nconst Content = styled(CardContent)`\r\n  flex: 1 0 auto;\r\n`\r\n\r\nconst Description = styled.div`\r\n  display: flex;\r\n  flex-grow: 1\r\n`\r\nconst Title = styled.div`\r\n  display: flex;\r\n  flex-direction:row;\r\n  font-size: 24px;\r\n  font-weight: 300;\r\n`\r\n\r\nconst Price = styled(NumberFormat)`\r\n  font-size: 46px;\r\n`"]},"metadata":{},"sourceType":"module"}