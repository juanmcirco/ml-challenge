{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\circo\\\\OneDrive\\\\Documentos\\\\repos\\\\examen ml\\\\TestML\\\\pages\\\\items\\\\[item].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport useSwr from 'swr';\n\nconst fetcher = url => fetch(url).then(res => res.json());\n\nexport default function Items() {\n  const router = useRouter();\n  const {\n    data,\n    error\n  } = useSwr(router.query.q ? `/api/items?q=${router.query.q}` : null, fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, \"Failed to load user\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }, data.items.map(item =>\n  /*componentizar*/\n  __jsx(\"div\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, item.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \" \", item.price.currency, \" \", item.price.amount), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, item.condition), __jsx(\"img\", {\n    src: item.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/pages/items/[item].js"],"names":["React","useRouter","useSwr","fetcher","url","fetch","then","res","json","Items","router","data","error","query","q","items","map","item","id","title","price","currency","amount","condition","picture"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAIC,GAAD,IAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,CAAzB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAC5BQ,MAAM,CAACG,KAAP,CAAaC,CAAb,GAAkB,gBAAeJ,MAAM,CAACG,KAAP,CAAaC,CAAE,EAAhD,GAAoD,IADxB,EAE5BX,OAF4B,CAA9B;AAIA,MAAIS,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACAA,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAeC,IAAI;AAChB;AACA;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,KAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKF,IAAI,CAACG,KAAL,CAAWC,QAAhB,OAA2BJ,IAAI,CAACG,KAAL,CAAWE,MAAtC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,IAAI,CAACM,SAAT,CAHJ,EAII;AAAK,IAAA,GAAG,EAAEN,IAAI,CAACO,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFH,CADA,CAAP;AAWD","sourcesContent":["import React from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport useSwr from 'swr'\r\n\r\nconst fetcher = (url) => fetch(url).then((res) => res.json())\r\n\r\nexport default function Items() {\r\n  const router = useRouter()\r\n  const { data, error } = useSwr(\r\n    router.query.q ? `/api/items?q=${router.query.q}` : null,\r\n    fetcher\r\n  )\r\n  if (error) return <div>Failed to load user</div>\r\n  if (!data) return <div>Loading...</div>\r\n  \r\n  return <div>\r\n        {data.items.map(item=> \r\n            /*componentizar*/\r\n            <div key={item.id}>\r\n                <h1>{item.title}</h1>\r\n                <p> {item.price.currency} {item.price.amount}</p>\r\n                <p>{item.condition}</p>\r\n                <img src={item.picture}></img>  \r\n            </div>\r\n        )}\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}