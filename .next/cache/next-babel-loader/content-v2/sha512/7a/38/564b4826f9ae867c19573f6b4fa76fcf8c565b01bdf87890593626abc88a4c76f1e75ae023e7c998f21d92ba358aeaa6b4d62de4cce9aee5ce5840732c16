{"ast":null,"code":"import axios from 'axios';\nexport default async function itemsHandler(req, res) {\n  const {\n    query: {\n      id\n    },\n    method\n  } = req;\n\n  try {\n    const {\n      data\n    } = await axios.get(`https://api.mercadolibre.com/items/${id}`);\n    const description = await axios.get(`https://api.mercadolibre.com/items/${id}/description`);\n    const items = {\n      id: data.id,\n      title: data.title,\n      price: {\n        currency: data.currency_id,\n        amount: data.price,\n        decimals: data.price - Math.floor(data.price) //no entendi bien de donde sacar los decimales, asi que lo calculo respecto al amount\n\n      },\n      picture: data.pictures[0].url,\n      condition: data.condition,\n      free_shipping: data.shipping.free_shipping,\n      sold_quantity: data.sold_quantity,\n      description: description.data.plain_text\n    };\n\n    switch (method) {\n      case 'GET':\n        res.status(200).json({\n          author: {\n            name: 'Juan Manuel',\n            lastname: 'Barreto Zacarias'\n          },\n          item: items\n        });\n        break;\n\n      default:\n        res.setHeader('Allow', ['GET']);\n        res.status(405).end(`Method ${method} Not Allowed`);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"sources":["C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/pages/api/items/[...id].js"],"names":["axios","itemsHandler","req","res","query","id","method","data","get","description","items","title","price","currency","currency_id","amount","decimals","Math","floor","picture","pictures","url","condition","free_shipping","shipping","sold_quantity","plain_text","status","json","author","name","lastname","item","setHeader","end","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,YAAf,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AACnD,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA;AAFI,MAGFJ,GAHJ;;AAKA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CAAW,sCAAqCH,EAAG,EAAnD,CAAvB;AACA,UAAMI,WAAW,GAAG,MAAMT,KAAK,CAACQ,GAAN,CAAW,sCAAqCH,EAAG,cAAnD,CAA1B;AAEA,UAAMK,KAAK,GAAG;AACZL,MAAAA,EAAE,EAAEE,IAAI,CAACF,EADG;AAEZM,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFA;AAGZC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAEN,IAAI,CAACO,WADV;AAELC,QAAAA,MAAM,EAAER,IAAI,CAACK,KAFR;AAGLI,QAAAA,QAAQ,EAAET,IAAI,CAACK,KAAL,GAAaK,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACK,KAAhB,CAHlB,CAGyC;;AAHzC,OAHK;AAQZO,MAAAA,OAAO,EAAEZ,IAAI,CAACa,QAAL,CAAc,CAAd,EAAiBC,GARd;AASZC,MAAAA,SAAS,EAAEf,IAAI,CAACe,SATJ;AAUZC,MAAAA,aAAa,EAAEhB,IAAI,CAACiB,QAAL,CAAcD,aAVjB;AAWZE,MAAAA,aAAa,EAAElB,IAAI,CAACkB,aAXR;AAYZhB,MAAAA,WAAW,EAAEA,WAAW,CAACF,IAAZ,CAAiBmB;AAZlB,KAAd;;AAgBA,YAAQpB,MAAR;AACE,WAAK,KAAL;AACEH,QAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,UAAAA,MAAM,EAAE;AACNC,YAAAA,IAAI,EAAE,aADA;AAENC,YAAAA,QAAQ,EAAE;AAFJ,WADW;AAKnBC,UAAAA,IAAI,EAAEtB;AALa,SAArB;AAOA;;AAEF;AACEP,QAAAA,GAAG,CAAC8B,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB;AACA9B,QAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBO,GAAhB,CAAqB,UAAS5B,MAAO,cAArC;AAbJ;AAeD,GAnCD,CAmCE,OAAO6B,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AAEF","sourcesContent":["import axios from 'axios'\r\n\r\nexport default async function itemsHandler(req, res) {\r\n  const {\r\n    query: { id },\r\n    method,\r\n  } = req\r\n\r\n  try {\r\n    const { data } = await axios.get(`https://api.mercadolibre.com/items/${id}`);\r\n    const description = await axios.get(`https://api.mercadolibre.com/items/${id}/description`);\r\n\r\n    const items = {\r\n      id: data.id,\r\n      title: data.title,\r\n      price: {\r\n        currency: data.currency_id,\r\n        amount: data.price,\r\n        decimals: data.price - Math.floor(data.price) //no entendi bien de donde sacar los decimales, asi que lo calculo respecto al amount\r\n      },\r\n      picture: data.pictures[0].url,\r\n      condition: data.condition,\r\n      free_shipping: data.shipping.free_shipping,\r\n      sold_quantity: data.sold_quantity,\r\n      description: description.data.plain_text,\r\n    }\r\n\r\n\r\n    switch (method) {\r\n      case 'GET':\r\n        res.status(200).json({\r\n          author: {\r\n            name: 'Juan Manuel',\r\n            lastname: 'Barreto Zacarias'\r\n          },\r\n          item: items\r\n        })\r\n        break\r\n\r\n      default:\r\n        res.setHeader('Allow', ['GET'])\r\n        res.status(405).end(`Method ${method} Not Allowed`)\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}