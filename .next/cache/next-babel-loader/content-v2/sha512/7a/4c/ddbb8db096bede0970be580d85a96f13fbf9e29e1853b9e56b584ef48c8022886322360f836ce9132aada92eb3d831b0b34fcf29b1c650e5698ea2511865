{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _extends from \"C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\circo\\\\OneDrive\\\\Documentos\\\\repos\\\\examen ml\\\\TestML\\\\components\\\\Searchbox.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-grow: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    padding: 7px 60px 9px 15px;\\n    -webkit-border-radius: 2px;\\n    border-radius: 2px;\\n    background-color: #fff;\\n    border: 0 rgba(0,0,0,.2);\\n    margin: 0 30px;\\n    display: flex;\\n    flex-grow: 1;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\nimport styled from 'styled-components';\n\nfunction sleep() {\n  var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function Searchbox(_ref) {\n  _s();\n\n  var _this = this;\n\n  var optionSelected = _ref.optionSelected;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState([]),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var loading = open && options.length === 0;\n  useEffect(function () {\n    var active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    return function () {\n      active = false;\n    };\n  }, [loading]);\n\n  var handleChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$axios, data, autosuggest;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(e.target.value && e.target.value !== \"\")) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 3;\n              return axios(\"/api/autosuggest?q=\".concat(e.target.value));\n\n            case 3:\n              _yield$axios = _context.sent;\n              data = _yield$axios.data;\n              _context.next = 7;\n              return sleep(1e3);\n\n            case 7:\n              _context.next = 9;\n              return data.suggestions;\n\n            case 9:\n              autosuggest = _context.sent;\n              setOptions(autosuggest.map(function (key) {\n                return {\n                  name: key.q\n                };\n              }));\n              console.log(options);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var goToProduct = function goToProduct(e) {\n    optionSelected(e);\n  };\n\n  useEffect(function () {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return __jsx(AutocompleteWrapper, {\n    id: \"autocomplete\",\n    open: open,\n    onOpen: function onOpen() {\n      setOpen(true);\n    },\n    onClose: function onClose() {\n      setOpen(false);\n    },\n    getOptionSelected: function getOptionSelected(option, value) {\n      goToProduct(option.name);\n      return option.name === value.name;\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    onInputChange: handleChange,\n    options: options,\n    loading: loading,\n    popupIcon: null,\n    renderInput: function renderInput(params) {\n      return __jsx(\"div\", {\n        ref: params.InputProps.ref,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, __jsx(InputWrapper, _extends({\n        type: \"search\"\n      }, params.inputProps, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  });\n}\n\n_s(Searchbox, \"NAnsH/wQUpBOztFs1nPXEavBw+I=\");\n\n_c = Searchbox;\nvar InputWrapper = styled.input(_templateObject());\n_c2 = InputWrapper;\nvar AutocompleteWrapper = styled(Autocomplete)(_templateObject2());\n_c3 = AutocompleteWrapper;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Searchbox\");\n$RefreshReg$(_c2, \"InputWrapper\");\n$RefreshReg$(_c3, \"AutocompleteWrapper\");","map":{"version":3,"sources":["C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/components/Searchbox.js"],"names":["React","useState","useEffect","axios","TextField","Autocomplete","styled","sleep","delay","Promise","resolve","setTimeout","Searchbox","optionSelected","open","setOpen","options","setOptions","loading","length","active","undefined","handleChange","e","target","value","data","suggestions","autosuggest","map","key","name","q","console","log","goToProduct","option","params","InputProps","ref","inputProps","InputWrapper","input","AutocompleteWrapper"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\r\nimport styled from 'styled-components'\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nexport default function Searchbox({ optionSelected }) {\r\n    const [open, setOpen] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const loading = open && options.length === 0;\r\n\r\n    useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    const handleChange = async (e) => {\r\n        if (e.target.value && e.target.value !== \"\") {\r\n            const { data } = await axios(`/api/autosuggest?q=${e.target.value}`)\r\n            await sleep(1e3)\r\n            const autosuggest = await data.suggestions;\r\n            setOptions(autosuggest.map((key) => { return { name: key.q } }));\r\n            console.log(options)\r\n        }\r\n    }\r\n\r\n    const goToProduct = (e) => {\r\n        optionSelected(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <AutocompleteWrapper\r\n            id=\"autocomplete\"\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            getOptionSelected={(option, value) => {\r\n                goToProduct(option.name)\r\n                return option.name === value.name\r\n            }}\r\n            getOptionLabel={(option) => option.name}\r\n            onInputChange={handleChange}\r\n            options={options}\r\n            loading={loading}\r\n            popupIcon={null}\r\n            renderInput={(params) => (\r\n                <div ref={params.InputProps.ref}>\r\n                    <InputWrapper type=\"search\" {...params.inputProps} />\r\n                </div>\r\n            )}\r\n        />\r\n\r\n    );\r\n}\r\n\r\nconst InputWrapper = styled.input`\r\n    padding: 7px 60px 9px 15px;\r\n    -webkit-border-radius: 2px;\r\n    border-radius: 2px;\r\n    background-color: #fff;\r\n    border: 0 rgba(0,0,0,.2);\r\n    margin: 0 30px;\r\n    display: flex;\r\n    flex-grow: 1;\r\n`\r\n\r\nconst AutocompleteWrapper = styled(Autocomplete)`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`"]},"metadata":{},"sourceType":"module"}