{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\circo\\\\OneDrive\\\\Documentos\\\\repos\\\\examen ml\\\\TestML\\\\components\\\\Searchbox.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\nimport styled from 'styled-components';\nimport { useCookies } from \"react-cookie\";\n\nfunction sleep(delay = 0) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function Searchbox({\n  optionSelected\n}) {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]);\n  const loading = open && options.length === 0;\n  const [cookies, setCookie] = useCookies([\"LastSearch\"]);\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  const handleChange = async e => {\n    if (e.target.value && e.target.value !== \"\") {\n      const {\n        data\n      } = await axios(`/api/autosuggest?q=${e.target.value}`);\n      await sleep(1e3);\n      const autosuggest = await data.suggestions;\n      setOptions(autosuggest.map(key => {\n        return {\n          name: key.q\n        };\n      }));\n    }\n  };\n\n  const goToProduct = e => {\n    optionSelected(e);\n  };\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return __jsx(AutocompleteWrapper, {\n    id: \"autocomplete\",\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    },\n    getOptionSelected: (option, value) => {\n      goToProduct(option.name);\n      return option.name === value.name;\n    },\n    getOptionLabel: option => option.name,\n    onInputChange: handleChange,\n    options: options,\n    loading: loading,\n    loadingText: 'Cargando',\n    popupIcon: null,\n    renderInput: params => __jsx(\"div\", {\n      ref: params.InputProps.ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, __jsx(InputWrapper, _extends({\n      type: \"search\"\n    }, params.inputProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  });\n}\nconst InputWrapper = styled.input`\n    padding: 7px 60px 9px 15px;\n    -webkit-border-radius: 2px;\n    border-radius: 2px;\n    background-color: #fff;\n    border: 0 rgba(0,0,0,.2);\n    margin: 0 30px;\n    display: flex;\n    flex-grow: 1;\n`;\nconst AutocompleteWrapper = styled(Autocomplete)`\n    display: flex;\n    flex-grow: 1;\n    div{\n        display: flex;\n        flex-grow: 1;\n    }\n`;","map":{"version":3,"sources":["C:/Users/circo/OneDrive/Documentos/repos/examen ml/TestML/components/Searchbox.js"],"names":["React","useState","useEffect","axios","TextField","Autocomplete","styled","useCookies","sleep","delay","Promise","resolve","setTimeout","Searchbox","optionSelected","open","setOpen","options","setOptions","loading","length","cookies","setCookie","active","undefined","handleChange","e","target","value","data","autosuggest","suggestions","map","key","name","q","goToProduct","option","params","InputProps","ref","inputProps","InputWrapper","input","AutocompleteWrapper"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\r\nimport styled from 'styled-components'\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nexport default function Searchbox({ optionSelected }) {\r\n    const [open, setOpen] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const loading = open && options.length === 0;\r\n    const [cookies, setCookie] = useCookies([\"LastSearch\"]);\r\n\r\n    useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    const handleChange = async (e) => {\r\n        if (e.target.value && e.target.value !== \"\") {\r\n            const { data } = await axios(`/api/autosuggest?q=${e.target.value}`)\r\n\r\n            await sleep(1e3)\r\n            const autosuggest = await data.suggestions;\r\n            setOptions(autosuggest.map((key) => { return { name: key.q } }));\r\n        }\r\n    }\r\n\r\n    const goToProduct = (e) => {\r\n        optionSelected(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <AutocompleteWrapper\r\n            id=\"autocomplete\"\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            getOptionSelected={(option, value) => {\r\n                goToProduct(option.name)\r\n                return option.name === value.name\r\n            }}\r\n            getOptionLabel={(option) => option.name}\r\n            onInputChange={handleChange}\r\n            options={options}\r\n            loading={loading}\r\n            loadingText={'Cargando'}\r\n            popupIcon={null}\r\n            renderInput={(params) => (\r\n                <div ref={params.InputProps.ref}>\r\n                    <InputWrapper type=\"search\" {...params.inputProps} />\r\n                </div>\r\n            )}\r\n        />\r\n\r\n    );\r\n}\r\n\r\nconst InputWrapper = styled.input`\r\n    padding: 7px 60px 9px 15px;\r\n    -webkit-border-radius: 2px;\r\n    border-radius: 2px;\r\n    background-color: #fff;\r\n    border: 0 rgba(0,0,0,.2);\r\n    margin: 0 30px;\r\n    display: flex;\r\n    flex-grow: 1;\r\n`\r\n\r\nconst AutocompleteWrapper = styled(Autocomplete)`\r\n    display: flex;\r\n    flex-grow: 1;\r\n    div{\r\n        display: flex;\r\n        flex-grow: 1;\r\n    }\r\n`"]},"metadata":{},"sourceType":"module"}